/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DragDialog.java
 *
 * Created on 2009-12-1, 16:45:04
 */
package drag;

import java.awt.datatransfer.DataFlavor;
import java.io.File;
import java.util.Arrays;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.TransferHandler;

/**
 *
 * @author Administrator
 */
public class DragDialog extends javax.swing.JDialog {

    /** Creates new form DragDialog */
    public DragDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setTransferHandler(new FileTransferHandler());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 353, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 227, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                DragDialog dialog = new DragDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    private class FileTransferHandler extends TransferHandler {

        public boolean canImport(TransferHandler.TransferSupport support) {
            if (!(support.isDrop())) {
                return false;
            }
            if (!(support.isDataFlavorSupported(DataFlavor.javaFileListFlavor))) {
                return false;
            }
            if ((support.getSourceDropActions() & 0x1) != 0) {
                support.setDropAction(1);
            }
            return true;
        }

        public boolean importData(TransferHandler.TransferSupport support) {
            try {
                List fileList = (List) support.getTransferable().getTransferData(DataFlavor.javaFileListFlavor);
                File[] files = new File[fileList.size()];
                fileList.toArray(files);
                JOptionPane.showInputDialog(Arrays.toString(files));
            } catch (Exception ex) {
            }

            return true;
        }
    }
}
