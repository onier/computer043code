/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Properties.java
 *
 * Created on Jan 5, 2011, 5:46:06 PM
 */
package testframe;

import java.awt.BorderLayout;
import javax.swing.JScrollPane;
import layout.DownComponentPanel;
import layout.JDownComponentPanelContainer;
import layout.LabelHeaderRenderer;
import layout.TableComponentPanelRenderer;
import shape.AbstractPropertiesModel;

/**
 *
 * @author Administrator
 */
public class Properties extends javax.swing.JPanel {

    private static Properties properties = new Properties();
    private JDownComponentPanelContainer container;

    /**
     * @return the properties
     */
    public static Properties getProperties() {
        return properties;
    }
//    private TableComponentPanelRenderer tableRenderer = new TableComponentPanelRenderer();
//    private LabelHeaderRenderer headerRenderer = new LabelHeaderRenderer("属性");

    /** Creates new form Properties */
    private Properties() {
        initComponents();
        container = new JDownComponentPanelContainer();
//        container.addPopupPanel(new DownComponentPanel(headerRenderer, tableRenderer));
//        container.addPopupPanel(new DownComponentPanel(new LabelHeaderRenderer("属性"), new TableComponentPanelRenderer()));
//        container.addPopupPanel(new DownComponentPanel(new LabelHeaderRenderer("属性"), new TableComponentPanelRenderer()));
//        container.addPopupPanel(new DownComponentPanel(new ButtonHeaderRenderer("属性"), new TableComponentPanelRenderer()));
//        container.addPopupPanel(new DownComponentPanel(new ButtonHeaderRenderer("属性"), new TableComponentPanelRenderer()));
//        container.addPopupPanel(new DownComponentPanel(new ButtonHeaderRenderer("属性"), new TableComponentPanelRenderer()));
        this.jPanel1.setLayout(new BorderLayout());
        jPanel1.add(new JScrollPane(container));
    }

    public void setProperties(AbstractPropertiesModel[] models) {
        container.removeAllComponent();
        for (int i = 0; i < models.length; i++) {
            AbstractPropertiesModel abstractPropertiesModel = models[i];
            container.addPopupPanel(new DownComponentPanel(new LabelHeaderRenderer(abstractPropertiesModel.getPropertyName()), new TableComponentPanelRenderer(abstractPropertiesModel)));
        }
        container.doLayout();
        container.repaint();
        jPanel1.revalidate();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();

        setLayout(new java.awt.BorderLayout());

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jPanel1.setName("jPanel1"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 398, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 298, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(jPanel1);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
//    /**
//     * @return the tableRenderer
//     */
//    public TableComponentPanelRenderer getTableRenderer() {
//        return tableRenderer;
//    }
//    /**
//     * @return the headerRenderer
//     */
//    public LabelHeaderRenderer getHeaderRenderer() {
//        return headerRenderer;
//    }
}
