/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Navigator.java
 *
 * Created on Jan 5, 2011, 5:58:31 PM
 */
package testframe;

import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import node.StartBeanNodeElement;
import widget.WidgetInfo;

/**
 *
 * @author Administrator
 */
public class Navigator extends javax.swing.JPanel {

    private static Navigator navigator = new Navigator();

    /**
     * @return the navigator
     */
    public static Navigator getNavigator() {
        return navigator;
    }

    public String convertValueToText(Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) {
        if (value instanceof DefaultMutableTreeNode) {
            if (((DefaultMutableTreeNode) value).getUserObject() instanceof WidgetInfo) {
                return ((WidgetInfo) ((DefaultMutableTreeNode) value).getUserObject()).getWidgetName();
            }
            if (((DefaultMutableTreeNode) value).getUserObject() instanceof StartBeanNodeElement) {
                return ((StartBeanNodeElement) ((DefaultMutableTreeNode) value).getUserObject()).getDisctription();
            }
        }
        return value.toString();
    }

    public void setNavigatorProperty(DefaultMutableTreeNode node) {
        this.jXTree1.setModel(new DefaultTreeModel(node));
        jXTree1.setRootVisible(false);
//        int row = jTree1.getRowCount();
//        for (int i = 0; i < row; i++) {
//            jTree1.expandRow(i);
//        }
        jXTree1.expandAll();
    }

    /** Creates new form Navigator */
    private Navigator() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jXTreeTable1 = new org.jdesktop.swingx.JXTreeTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jXTree1 = new org.jdesktop.swingx.JXTree(){
            public String convertValueToText(Object value,
                boolean selected,
                boolean expanded,
                boolean leaf,
                int row,
                boolean hasFocus){
                return Navigator.this.convertValueToText(value,selected,expanded,leaf,row,hasFocus);
            }

            public void clearSelection(){
                super.clearSelection();
            }
        };
        jXDatePicker1 = new org.jdesktop.swingx.JXDatePicker();

        setLayout(new java.awt.BorderLayout());

        jTabbedPane1.setName("jTabbedPane1"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jXTreeTable1.setName("jXTreeTable1"); // NOI18N
        jScrollPane1.setViewportView(jXTreeTable1);

        jTabbedPane1.addTab("tab1", jScrollPane1);

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        jXTree1.setName("jXTree1"); // NOI18N
        jXTree1.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                jXTree1ValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(jXTree1);

        jTabbedPane1.addTab("tab3", jScrollPane3);

        jXDatePicker1.setName("jXDatePicker1"); // NOI18N
        jTabbedPane1.addTab("tab3", jXDatePicker1);

        add(jTabbedPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jXTree1ValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_jXTree1ValueChanged
        Object obj = evt.getPath().getLastPathComponent();
        if (obj instanceof DefaultMutableTreeNode) {
            DefaultMutableTreeNode node = (DefaultMutableTreeNode) obj;
            if (node.getUserObject() instanceof WidgetInfo) {
                ((WidgetInfo) node.getUserObject()).properties();
            } else {
                DefaultMutableTreeNode parent = (DefaultMutableTreeNode) ((DefaultMutableTreeNode) obj).getParent();
                if (parent != null && parent instanceof DefaultMutableTreeNode) {
                    DefaultMutableTreeNode node1 = (DefaultMutableTreeNode) parent;
                    if (node1.getUserObject() instanceof StartBeanNodeElement) {
                        ((StartBeanNodeElement) node1.getUserObject()).firePropertyChange();
                    }
                }
            }
        }
    }//GEN-LAST:event_jXTree1ValueChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker1;
    private org.jdesktop.swingx.JXTree jXTree1;
    private org.jdesktop.swingx.JXTreeTable jXTreeTable1;
    // End of variables declaration//GEN-END:variables
}
